// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yandex-cloud/go-genproto/yandex/cloud/vpc/v1 (interfaces: SecurityGroupServiceServer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	vpc "github.com/yandex-cloud/go-genproto/yandex/cloud/vpc/v1"
)

// MockSecurityGroupServiceServer is a mock of SecurityGroupServiceServer interface.
type MockSecurityGroupServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockSecurityGroupServiceServerMockRecorder
}

// MockSecurityGroupServiceServerMockRecorder is the mock recorder for MockSecurityGroupServiceServer.
type MockSecurityGroupServiceServerMockRecorder struct {
	mock *MockSecurityGroupServiceServer
}

// NewMockSecurityGroupServiceServer creates a new mock instance.
func NewMockSecurityGroupServiceServer(ctrl *gomock.Controller) *MockSecurityGroupServiceServer {
	mock := &MockSecurityGroupServiceServer{ctrl: ctrl}
	mock.recorder = &MockSecurityGroupServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecurityGroupServiceServer) EXPECT() *MockSecurityGroupServiceServerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSecurityGroupServiceServer) Create(arg0 context.Context, arg1 *vpc.CreateSecurityGroupRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSecurityGroupServiceServerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockSecurityGroupServiceServer) Delete(arg0 context.Context, arg1 *vpc.DeleteSecurityGroupRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockSecurityGroupServiceServerMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockSecurityGroupServiceServer) Get(arg0 context.Context, arg1 *vpc.GetSecurityGroupRequest) (*vpc.SecurityGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*vpc.SecurityGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSecurityGroupServiceServerMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).Get), arg0, arg1)
}

// List mocks base method.
func (m *MockSecurityGroupServiceServer) List(arg0 context.Context, arg1 *vpc.ListSecurityGroupsRequest) (*vpc.ListSecurityGroupsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*vpc.ListSecurityGroupsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockSecurityGroupServiceServerMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).List), arg0, arg1)
}

// ListOperations mocks base method.
func (m *MockSecurityGroupServiceServer) ListOperations(arg0 context.Context, arg1 *vpc.ListSecurityGroupOperationsRequest) (*vpc.ListSecurityGroupOperationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOperations", arg0, arg1)
	ret0, _ := ret[0].(*vpc.ListSecurityGroupOperationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOperations indicates an expected call of ListOperations.
func (mr *MockSecurityGroupServiceServerMockRecorder) ListOperations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOperations", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).ListOperations), arg0, arg1)
}

// Move mocks base method.
func (m *MockSecurityGroupServiceServer) Move(arg0 context.Context, arg1 *vpc.MoveSecurityGroupRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Move", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Move indicates an expected call of Move.
func (mr *MockSecurityGroupServiceServerMockRecorder) Move(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Move", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).Move), arg0, arg1)
}

// Update mocks base method.
func (m *MockSecurityGroupServiceServer) Update(arg0 context.Context, arg1 *vpc.UpdateSecurityGroupRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockSecurityGroupServiceServerMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).Update), arg0, arg1)
}

// UpdateRule mocks base method.
func (m *MockSecurityGroupServiceServer) UpdateRule(arg0 context.Context, arg1 *vpc.UpdateSecurityGroupRuleRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRule", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRule indicates an expected call of UpdateRule.
func (mr *MockSecurityGroupServiceServerMockRecorder) UpdateRule(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRule", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).UpdateRule), arg0, arg1)
}

// UpdateRules mocks base method.
func (m *MockSecurityGroupServiceServer) UpdateRules(arg0 context.Context, arg1 *vpc.UpdateSecurityGroupRulesRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRules", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRules indicates an expected call of UpdateRules.
func (mr *MockSecurityGroupServiceServerMockRecorder) UpdateRules(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRules", reflect.TypeOf((*MockSecurityGroupServiceServer)(nil).UpdateRules), arg0, arg1)
}
