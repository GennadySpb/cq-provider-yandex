// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yandex-cloud/go-genproto/yandex/cloud/resourcemanager/v1 (interfaces: CloudServiceServer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	resourcemanager "github.com/yandex-cloud/go-genproto/yandex/cloud/resourcemanager/v1"
	reflect "reflect"
)

// MockCloudServiceServer is a mock of CloudServiceServer interface
type MockCloudServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockCloudServiceServerMockRecorder
}

// MockCloudServiceServerMockRecorder is the mock recorder for MockCloudServiceServer
type MockCloudServiceServerMockRecorder struct {
	mock *MockCloudServiceServer
}

// NewMockCloudServiceServer creates a new mock instance
func NewMockCloudServiceServer(ctrl *gomock.Controller) *MockCloudServiceServer {
	mock := &MockCloudServiceServer{ctrl: ctrl}
	mock.recorder = &MockCloudServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCloudServiceServer) EXPECT() *MockCloudServiceServerMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockCloudServiceServer) Create(arg0 context.Context, arg1 *resourcemanager.CreateCloudRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockCloudServiceServerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCloudServiceServer)(nil).Create), arg0, arg1)
}

// Delete mocks base method
func (m *MockCloudServiceServer) Delete(arg0 context.Context, arg1 *resourcemanager.DeleteCloudRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete
func (mr *MockCloudServiceServerMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockCloudServiceServer)(nil).Delete), arg0, arg1)
}

// Get mocks base method
func (m *MockCloudServiceServer) Get(arg0 context.Context, arg1 *resourcemanager.GetCloudRequest) (*resourcemanager.Cloud, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*resourcemanager.Cloud)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockCloudServiceServerMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCloudServiceServer)(nil).Get), arg0, arg1)
}

// List mocks base method
func (m *MockCloudServiceServer) List(arg0 context.Context, arg1 *resourcemanager.ListCloudsRequest) (*resourcemanager.ListCloudsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*resourcemanager.ListCloudsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockCloudServiceServerMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockCloudServiceServer)(nil).List), arg0, arg1)
}

// ListAccessBindings mocks base method
func (m *MockCloudServiceServer) ListAccessBindings(arg0 context.Context, arg1 *access.ListAccessBindingsRequest) (*access.ListAccessBindingsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAccessBindings", arg0, arg1)
	ret0, _ := ret[0].(*access.ListAccessBindingsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAccessBindings indicates an expected call of ListAccessBindings
func (mr *MockCloudServiceServerMockRecorder) ListAccessBindings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAccessBindings", reflect.TypeOf((*MockCloudServiceServer)(nil).ListAccessBindings), arg0, arg1)
}

// ListOperations mocks base method
func (m *MockCloudServiceServer) ListOperations(arg0 context.Context, arg1 *resourcemanager.ListCloudOperationsRequest) (*resourcemanager.ListCloudOperationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOperations", arg0, arg1)
	ret0, _ := ret[0].(*resourcemanager.ListCloudOperationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOperations indicates an expected call of ListOperations
func (mr *MockCloudServiceServerMockRecorder) ListOperations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOperations", reflect.TypeOf((*MockCloudServiceServer)(nil).ListOperations), arg0, arg1)
}

// SetAccessBindings mocks base method
func (m *MockCloudServiceServer) SetAccessBindings(arg0 context.Context, arg1 *access.SetAccessBindingsRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetAccessBindings", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetAccessBindings indicates an expected call of SetAccessBindings
func (mr *MockCloudServiceServerMockRecorder) SetAccessBindings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAccessBindings", reflect.TypeOf((*MockCloudServiceServer)(nil).SetAccessBindings), arg0, arg1)
}

// Update mocks base method
func (m *MockCloudServiceServer) Update(arg0 context.Context, arg1 *resourcemanager.UpdateCloudRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockCloudServiceServerMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockCloudServiceServer)(nil).Update), arg0, arg1)
}

// UpdateAccessBindings mocks base method
func (m *MockCloudServiceServer) UpdateAccessBindings(arg0 context.Context, arg1 *access.UpdateAccessBindingsRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAccessBindings", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAccessBindings indicates an expected call of UpdateAccessBindings
func (mr *MockCloudServiceServerMockRecorder) UpdateAccessBindings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAccessBindings", reflect.TypeOf((*MockCloudServiceServer)(nil).UpdateAccessBindings), arg0, arg1)
}
