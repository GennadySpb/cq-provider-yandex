// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yandex-cloud/go-genproto/yandex/cloud/lockbox/v1 (interfaces: SecretServiceServer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	lockbox "github.com/yandex-cloud/go-genproto/yandex/cloud/lockbox/v1"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
)

// MockSecretServiceServer is a mock of SecretServiceServer interface.
type MockSecretServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockSecretServiceServerMockRecorder
}

// MockSecretServiceServerMockRecorder is the mock recorder for MockSecretServiceServer.
type MockSecretServiceServerMockRecorder struct {
	mock *MockSecretServiceServer
}

// NewMockSecretServiceServer creates a new mock instance.
func NewMockSecretServiceServer(ctrl *gomock.Controller) *MockSecretServiceServer {
	mock := &MockSecretServiceServer{ctrl: ctrl}
	mock.recorder = &MockSecretServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretServiceServer) EXPECT() *MockSecretServiceServerMockRecorder {
	return m.recorder
}

// Activate mocks base method.
func (m *MockSecretServiceServer) Activate(arg0 context.Context, arg1 *lockbox.ActivateSecretRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Activate", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Activate indicates an expected call of Activate.
func (mr *MockSecretServiceServerMockRecorder) Activate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Activate", reflect.TypeOf((*MockSecretServiceServer)(nil).Activate), arg0, arg1)
}

// AddVersion mocks base method.
func (m *MockSecretServiceServer) AddVersion(arg0 context.Context, arg1 *lockbox.AddVersionRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddVersion", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddVersion indicates an expected call of AddVersion.
func (mr *MockSecretServiceServerMockRecorder) AddVersion(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVersion", reflect.TypeOf((*MockSecretServiceServer)(nil).AddVersion), arg0, arg1)
}

// CancelVersionDestruction mocks base method.
func (m *MockSecretServiceServer) CancelVersionDestruction(arg0 context.Context, arg1 *lockbox.CancelVersionDestructionRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CancelVersionDestruction", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CancelVersionDestruction indicates an expected call of CancelVersionDestruction.
func (mr *MockSecretServiceServerMockRecorder) CancelVersionDestruction(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CancelVersionDestruction", reflect.TypeOf((*MockSecretServiceServer)(nil).CancelVersionDestruction), arg0, arg1)
}

// Create mocks base method.
func (m *MockSecretServiceServer) Create(arg0 context.Context, arg1 *lockbox.CreateSecretRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSecretServiceServerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSecretServiceServer)(nil).Create), arg0, arg1)
}

// Deactivate mocks base method.
func (m *MockSecretServiceServer) Deactivate(arg0 context.Context, arg1 *lockbox.DeactivateSecretRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deactivate", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Deactivate indicates an expected call of Deactivate.
func (mr *MockSecretServiceServerMockRecorder) Deactivate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deactivate", reflect.TypeOf((*MockSecretServiceServer)(nil).Deactivate), arg0, arg1)
}

// Delete mocks base method.
func (m *MockSecretServiceServer) Delete(arg0 context.Context, arg1 *lockbox.DeleteSecretRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockSecretServiceServerMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSecretServiceServer)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockSecretServiceServer) Get(arg0 context.Context, arg1 *lockbox.GetSecretRequest) (*lockbox.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*lockbox.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSecretServiceServerMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSecretServiceServer)(nil).Get), arg0, arg1)
}

// List mocks base method.
func (m *MockSecretServiceServer) List(arg0 context.Context, arg1 *lockbox.ListSecretsRequest) (*lockbox.ListSecretsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*lockbox.ListSecretsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockSecretServiceServerMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockSecretServiceServer)(nil).List), arg0, arg1)
}

// ListAccessBindings mocks base method.
func (m *MockSecretServiceServer) ListAccessBindings(arg0 context.Context, arg1 *access.ListAccessBindingsRequest) (*access.ListAccessBindingsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAccessBindings", arg0, arg1)
	ret0, _ := ret[0].(*access.ListAccessBindingsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAccessBindings indicates an expected call of ListAccessBindings.
func (mr *MockSecretServiceServerMockRecorder) ListAccessBindings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAccessBindings", reflect.TypeOf((*MockSecretServiceServer)(nil).ListAccessBindings), arg0, arg1)
}

// ListOperations mocks base method.
func (m *MockSecretServiceServer) ListOperations(arg0 context.Context, arg1 *lockbox.ListSecretOperationsRequest) (*lockbox.ListSecretOperationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOperations", arg0, arg1)
	ret0, _ := ret[0].(*lockbox.ListSecretOperationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOperations indicates an expected call of ListOperations.
func (mr *MockSecretServiceServerMockRecorder) ListOperations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOperations", reflect.TypeOf((*MockSecretServiceServer)(nil).ListOperations), arg0, arg1)
}

// ListVersions mocks base method.
func (m *MockSecretServiceServer) ListVersions(arg0 context.Context, arg1 *lockbox.ListVersionsRequest) (*lockbox.ListVersionsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVersions", arg0, arg1)
	ret0, _ := ret[0].(*lockbox.ListVersionsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVersions indicates an expected call of ListVersions.
func (mr *MockSecretServiceServerMockRecorder) ListVersions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVersions", reflect.TypeOf((*MockSecretServiceServer)(nil).ListVersions), arg0, arg1)
}

// ScheduleVersionDestruction mocks base method.
func (m *MockSecretServiceServer) ScheduleVersionDestruction(arg0 context.Context, arg1 *lockbox.ScheduleVersionDestructionRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScheduleVersionDestruction", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ScheduleVersionDestruction indicates an expected call of ScheduleVersionDestruction.
func (mr *MockSecretServiceServerMockRecorder) ScheduleVersionDestruction(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScheduleVersionDestruction", reflect.TypeOf((*MockSecretServiceServer)(nil).ScheduleVersionDestruction), arg0, arg1)
}

// SetAccessBindings mocks base method.
func (m *MockSecretServiceServer) SetAccessBindings(arg0 context.Context, arg1 *access.SetAccessBindingsRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetAccessBindings", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetAccessBindings indicates an expected call of SetAccessBindings.
func (mr *MockSecretServiceServerMockRecorder) SetAccessBindings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAccessBindings", reflect.TypeOf((*MockSecretServiceServer)(nil).SetAccessBindings), arg0, arg1)
}

// Update mocks base method.
func (m *MockSecretServiceServer) Update(arg0 context.Context, arg1 *lockbox.UpdateSecretRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockSecretServiceServerMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockSecretServiceServer)(nil).Update), arg0, arg1)
}

// UpdateAccessBindings mocks base method.
func (m *MockSecretServiceServer) UpdateAccessBindings(arg0 context.Context, arg1 *access.UpdateAccessBindingsRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAccessBindings", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAccessBindings indicates an expected call of UpdateAccessBindings.
func (mr *MockSecretServiceServerMockRecorder) UpdateAccessBindings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAccessBindings", reflect.TypeOf((*MockSecretServiceServer)(nil).UpdateAccessBindings), arg0, arg1)
}
