// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yandex-cloud/go-genproto/yandex/cloud/k8s/v1 (interfaces: NodeGroupServiceServer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	k8s "github.com/yandex-cloud/go-genproto/yandex/cloud/k8s/v1"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	reflect "reflect"
)

// MockNodeGroupServiceServer is a mock of NodeGroupServiceServer interface
type MockNodeGroupServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockNodeGroupServiceServerMockRecorder
}

// MockNodeGroupServiceServerMockRecorder is the mock recorder for MockNodeGroupServiceServer
type MockNodeGroupServiceServerMockRecorder struct {
	mock *MockNodeGroupServiceServer
}

// NewMockNodeGroupServiceServer creates a new mock instance
func NewMockNodeGroupServiceServer(ctrl *gomock.Controller) *MockNodeGroupServiceServer {
	mock := &MockNodeGroupServiceServer{ctrl: ctrl}
	mock.recorder = &MockNodeGroupServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNodeGroupServiceServer) EXPECT() *MockNodeGroupServiceServerMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockNodeGroupServiceServer) Create(arg0 context.Context, arg1 *k8s.CreateNodeGroupRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockNodeGroupServiceServerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockNodeGroupServiceServer)(nil).Create), arg0, arg1)
}

// Delete mocks base method
func (m *MockNodeGroupServiceServer) Delete(arg0 context.Context, arg1 *k8s.DeleteNodeGroupRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete
func (mr *MockNodeGroupServiceServerMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockNodeGroupServiceServer)(nil).Delete), arg0, arg1)
}

// Get mocks base method
func (m *MockNodeGroupServiceServer) Get(arg0 context.Context, arg1 *k8s.GetNodeGroupRequest) (*k8s.NodeGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*k8s.NodeGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockNodeGroupServiceServerMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockNodeGroupServiceServer)(nil).Get), arg0, arg1)
}

// List mocks base method
func (m *MockNodeGroupServiceServer) List(arg0 context.Context, arg1 *k8s.ListNodeGroupsRequest) (*k8s.ListNodeGroupsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*k8s.ListNodeGroupsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockNodeGroupServiceServerMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockNodeGroupServiceServer)(nil).List), arg0, arg1)
}

// ListNodes mocks base method
func (m *MockNodeGroupServiceServer) ListNodes(arg0 context.Context, arg1 *k8s.ListNodeGroupNodesRequest) (*k8s.ListNodeGroupNodesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNodes", arg0, arg1)
	ret0, _ := ret[0].(*k8s.ListNodeGroupNodesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNodes indicates an expected call of ListNodes
func (mr *MockNodeGroupServiceServerMockRecorder) ListNodes(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNodes", reflect.TypeOf((*MockNodeGroupServiceServer)(nil).ListNodes), arg0, arg1)
}

// ListOperations mocks base method
func (m *MockNodeGroupServiceServer) ListOperations(arg0 context.Context, arg1 *k8s.ListNodeGroupOperationsRequest) (*k8s.ListNodeGroupOperationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOperations", arg0, arg1)
	ret0, _ := ret[0].(*k8s.ListNodeGroupOperationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOperations indicates an expected call of ListOperations
func (mr *MockNodeGroupServiceServerMockRecorder) ListOperations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOperations", reflect.TypeOf((*MockNodeGroupServiceServer)(nil).ListOperations), arg0, arg1)
}

// Update mocks base method
func (m *MockNodeGroupServiceServer) Update(arg0 context.Context, arg1 *k8s.UpdateNodeGroupRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockNodeGroupServiceServerMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockNodeGroupServiceServer)(nil).Update), arg0, arg1)
}
