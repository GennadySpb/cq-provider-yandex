// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yandex-cloud/go-genproto/yandex/cloud/vpc/v1 (interfaces: AddressServiceServer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	vpc "github.com/yandex-cloud/go-genproto/yandex/cloud/vpc/v1"
	reflect "reflect"
)

// MockAddressServiceServer is a mock of AddressServiceServer interface
type MockAddressServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockAddressServiceServerMockRecorder
}

// MockAddressServiceServerMockRecorder is the mock recorder for MockAddressServiceServer
type MockAddressServiceServerMockRecorder struct {
	mock *MockAddressServiceServer
}

// NewMockAddressServiceServer creates a new mock instance
func NewMockAddressServiceServer(ctrl *gomock.Controller) *MockAddressServiceServer {
	mock := &MockAddressServiceServer{ctrl: ctrl}
	mock.recorder = &MockAddressServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAddressServiceServer) EXPECT() *MockAddressServiceServerMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockAddressServiceServer) Create(arg0 context.Context, arg1 *vpc.CreateAddressRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockAddressServiceServerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAddressServiceServer)(nil).Create), arg0, arg1)
}

// Delete mocks base method
func (m *MockAddressServiceServer) Delete(arg0 context.Context, arg1 *vpc.DeleteAddressRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete
func (mr *MockAddressServiceServerMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockAddressServiceServer)(nil).Delete), arg0, arg1)
}

// Get mocks base method
func (m *MockAddressServiceServer) Get(arg0 context.Context, arg1 *vpc.GetAddressRequest) (*vpc.Address, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*vpc.Address)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockAddressServiceServerMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAddressServiceServer)(nil).Get), arg0, arg1)
}

// GetByValue mocks base method
func (m *MockAddressServiceServer) GetByValue(arg0 context.Context, arg1 *vpc.GetAddressByValueRequest) (*vpc.Address, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByValue", arg0, arg1)
	ret0, _ := ret[0].(*vpc.Address)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByValue indicates an expected call of GetByValue
func (mr *MockAddressServiceServerMockRecorder) GetByValue(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByValue", reflect.TypeOf((*MockAddressServiceServer)(nil).GetByValue), arg0, arg1)
}

// List mocks base method
func (m *MockAddressServiceServer) List(arg0 context.Context, arg1 *vpc.ListAddressesRequest) (*vpc.ListAddressesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*vpc.ListAddressesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockAddressServiceServerMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockAddressServiceServer)(nil).List), arg0, arg1)
}

// ListOperations mocks base method
func (m *MockAddressServiceServer) ListOperations(arg0 context.Context, arg1 *vpc.ListAddressOperationsRequest) (*vpc.ListAddressOperationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOperations", arg0, arg1)
	ret0, _ := ret[0].(*vpc.ListAddressOperationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOperations indicates an expected call of ListOperations
func (mr *MockAddressServiceServerMockRecorder) ListOperations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOperations", reflect.TypeOf((*MockAddressServiceServer)(nil).ListOperations), arg0, arg1)
}

// Move mocks base method
func (m *MockAddressServiceServer) Move(arg0 context.Context, arg1 *vpc.MoveAddressRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Move", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Move indicates an expected call of Move
func (mr *MockAddressServiceServerMockRecorder) Move(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Move", reflect.TypeOf((*MockAddressServiceServer)(nil).Move), arg0, arg1)
}

// Update mocks base method
func (m *MockAddressServiceServer) Update(arg0 context.Context, arg1 *vpc.UpdateAddressRequest) (*operation.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*operation.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockAddressServiceServerMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockAddressServiceServer)(nil).Update), arg0, arg1)
}
